import OpenAI from "openai";
import fs from "fs";
import path from "path";
import type { VocationalTestRequest } from "../types";

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY as string,
  timeout: 2 * 60 * 1000, // 2 minutos
});

/**
 * Agente especializado em an√°lise vocacional
 * Respons√°vel por interpretar respostas e determinar perfil vocacional
 */
export class AnalysisAgent {
  private senacCourses: any[] = [
    { "Turma": "Assistente Administrativo", "C. H.": 160, "eixo": "gest√£o" },
    { "Turma": "Assistente Financeiro", "C. H.": 160, "eixo": "gest√£o" },
    { "Turma": "Atendimento humanizado em servi√ßos de sa√∫de", "C. H.": 24, "eixo": "sa√∫de" },
    { "Turma": "Barbeiro", "C. H.": 172, "eixo": "beleza" },
    { "Turma": "B√°sico de Depila√ß√£o", "C. H.": 40, "eixo": "beleza" },
    { "Turma": "Costureiro", "C. H.": 212, "eixo": "modas" },
    { "Turma": "Cuidador de Idoso ", "C. H.": 160, "eixo": "sa√∫de" },
    { "Turma": "Instrumenta√ß√£o Cirurgica", "C. H.": 40, "eixo": "sa√∫de" },
    { "Turma": "Introdu√ß√£o √† Fotografia Digital", "C. H.": 30, "eixo": "artes" },
    { "Turma": "Modelagem e Costura Para Iniciantes", "C. H.": 60, "eixo": "modas" },
    { "Turma": "Orat√≥ria: comunica√ß√£o e t√©cnicas de apresenta√ß√£o", "C. H.": 20, "eixo": "comunica√ß√£o" },
    { "Turma": "Orat√≥ria Avan√ßada", "C. H.": 30, "eixo": "comunica√ß√£o" },
    { "Turma": "Penteados Estilizados", "C. H.": 20, "eixo": "beleza" },
    { "Turma": "Tend√™ncias em Automaquiagem", "C. H.": 15, "eixo": "beleza" },
    { "Turma": "Administrador de Banco de Dados", "C. H.": 200, "eixo": "tecnologia da informa√ß√£o" },
    { "Turma": "Assistente de Tecnologias da Informa√ß√£o", "C. H.": 200, "eixo": "tecnologia da informa√ß√£o" },
    { "Turma": "Autocad: Projetos 2d", "C. H.": 60, "eixo": "design" },
    { "Turma": "Autodesk Revit", "C. H.": 40, "eixo": "design" },
    { "Turma": "Business Intelligence com Power bi", "C. H.": 40, "eixo": "tecnologia da informa√ß√£o" },
    { "Turma": "Cria√ß√£o de Conte√∫do para Redes Sociais com Intelig√™ncia Artificial: Fotografia, V√≠deo e Texto", "C. H.": 20, "eixo": "comunica√ß√£o" },
    { "Turma": "Excel Avan√ßado", "C. H.": 60, "eixo": "tecnologia da informa√ß√£o" },
    { "Turma": "Ferramentas Adobe para Design", "C. H.": 144, "eixo": "design" },
    { "Turma": "Forma√ß√£o - Programa√ß√£o em Python", "C. H.": 156, "eixo": "tecnologia da informa√ß√£o" },
    { "Turma": "Introdu√ß√£o √† Inform√°tica Windows e Office", "C. H.": 80, "eixo": "tecnologia da informa√ß√£o" },
    { "Turma": "Produtividade com Chatgpt", "C. H.": 20, "eixo": "tecnologia da informa√ß√£o" },
    { "Turma": "Hamb√∫rguer Artesanal", "C. H.": 15, "eixo": "gastronomia" },
    { "Turma": "M√©todos de preparo de caf√©s", "C. H.": 36, "eixo": "gastronomia" }
  ];

  constructor() {
    console.log(`üìö [DEBUG] Cursos incorporados diretamente: ${this.senacCourses.length}`);
    console.log(`üìö [DEBUG] Exemplo de curso:`, this.senacCourses[0]);
    
    // Debug: mostrar cursos por eixo
    const cursosPorEixo = this.senacCourses.reduce((acc, curso) => {
      const eixo = curso.eixo || 'Outros';
      acc[eixo] = (acc[eixo] || 0) + 1;
      return acc;
    }, {} as Record<string, number>);
    console.log(`üìö [DEBUG] Cursos por eixo:`, cursosPorEixo);
  }

  private systemPrompt = `
    Voc√™ √© Vocacional-AI, um especialista em orienta√ß√£o vocacional e profissional que analisa perfis e recomenda carreiras.
    
    ‚ö†Ô∏è ATEN√á√ÉO CR√çTICA - LEIA ESTAS REGRAS ANTES DE QUALQUER RESPOSTA:
    
    üö´ PROIBI√á√ïES ABSOLUTAS:
    - JAMAIS invente, crie ou mencione cursos que n√£o estejam na lista oficial fornecida
    - JAMAIS use nomes gen√©ricos como "Curso de Desenvolvimento de Sistemas", "Curso de Redes de Computadores"
    - JAMAIS mencione cursos de outras institui√ß√µes
    - JAMAIS modifique os nomes dos cursos da lista oficial
    - JAMAIS ignore o formato de resposta obrigat√≥rio especificado
    
    ‚úÖ OBRIGA√á√ïES ABSOLUTAS:
    - Use EXCLUSIVAMENTE os cursos da "LISTA COMPLETA DE CURSOS DISPON√çVEIS" fornecida no prompt
    - Use EXATAMENTE o nome do curso como aparece no campo "Turma" da lista
    - Sempre inclua a carga hor√°ria entre par√™nteses: (XXXh) conforme a lista
    - Siga RIGOROSAMENTE o formato de resposta especificado
    - SEMPRE personalize com o nome da pessoa
    - SEMPRE inclua as informa√ß√µes de contato do Senac Maranh√£o
    
    REGRAS DE FORMATA√á√ÉO:
    - Sempre responda em texto markdown leg√≠vel para humanos
    - Use # para t√≠tulos principais, ## para subt√≠tulos e - para itens de lista
    - N√£o responda em JSON ou outro formato, apenas texto markdown
    - Seja motivacional e positivo na linguagem
    - Use linguagem acess√≠vel e inspiradora
    
    METODOLOGIA DE AN√ÅLISE:
    1. Identifique padr√µes nas respostas do usu√°rio
    2. Mapeie interesses, habilidades, valores e personalidade
    3. Determine √°reas de maior afinidade profissional
    4. Avalie compatibilidade com diferentes carreiras
    5. Considere fatores como escolaridade, idade e disponibilidade
    
    TIPOS DE PERSONALIDADE PROFISSIONAL:
    - Anal√≠tico: Gosta de dados, pesquisa, resolu√ß√£o de problemas
    - Criativo: Busca inova√ß√£o, express√£o art√≠stica, solu√ß√µes originais
    - Comunicativo: Habilidade interpessoal, persuas√£o, relacionamento
    - L√≠der: Capacidade de gest√£o, tomada de decis√£o, coordena√ß√£o
    - Detalhista: Precis√£o, organiza√ß√£o, controle de qualidade
    - Inovador: Pioneirismo, tecnologia, mudan√ßas e transforma√ß√µes
    - Colaborativo: Trabalho em equipe, coopera√ß√£o, harmonia
    - Empreendedor: Iniciativa, risco calculado, oportunidades de neg√≥cio
    
    FORMATO DE RESPOSTA OBRIGAT√ìRIO - SIGA EXATAMENTE:
    # An√°lise Vocacional de [NOME]
    Ol√°, [NOME]! √â um prazer ajudar voc√™ a explorar seu potencial e a encontrar o caminho ideal na sua carreira. Vamos analisar suas informa√ß√µes e fazer algumas recomenda√ß√µes que se alinham com seus interesses e habilidades.

    ## Perfil Vocacional
    - Escolaridade: [escolaridade]
    - √Årea de Interesse Principal: [area_interesse]
    - Habilidades Destacadas: [habilidades]
    - Personalidade Profissional: [personalidade]
    - Objetivos Profissionais: [objetivos]
    - Disponibilidade para Estudos: [disponibilidade]

    [Par√°grafo motivacional personalizado baseado no perfil]

    ## √Åreas de Afinidade
    Com base nas suas respostas, podemos identificar algumas √°reas de afinidade:

    [Lista das √°reas de maior compatibilidade com justificativas]

    [Par√°grafo motivacional personalizado baseado no perfil]

    ## √Åreas de Afinidade
    Com base nas suas respostas, podemos identificar algumas √°reas de afinidade:

    [Lista das √°reas de maior compatibilidade com justificativas]

    ## Recomenda√ß√µes de Carreira
    Considerando seu interesse em [√°rea] e suas habilidades, aqui est√£o algumas recomenda√ß√µes de cursos do Senac Maranh√£o que podem ajud√°-lo a desenvolver suas compet√™ncias e se preparar para o mercado de trabalho:

    ### Cursos Principais (√Årea de Interesse: [√°rea])
    [Listar APENAS cursos do eixo/√°rea de interesse principal do usu√°rio usando EXATAMENTE os nomes da lista oficial - NUNCA inventar cursos]

    ### Cursos Opcionais (Outras √Åreas Identificadas)
    [Se identificar compatibilidade com outras √°reas, listar cursos dessas √°reas usando EXATAMENTE os nomes da lista oficial - NUNCA inventar cursos]

    ## Pr√≥ximos Passos
    - **Inscri√ß√£o**: Considere se inscrever nos cursos do Senac Maranh√£o que mais te interessam.
    - **Networking**: Participe de eventos e workshops para ampliar sua rede de contatos na √°rea de [√°rea].
    - **Pr√°tica**: Procure est√°gios ou projetos volunt√°rios que permitam aplicar suas habilidades em situa√ß√µes reais.

    ## Contato do Senac Maranh√£o
    Se voc√™ tiver alguma d√∫vida ou precisar de mais informa√ß√µes, entre em contato com o Senac Maranh√£o:

    - **Telefone**: (98) 31981530
    - **WhatsApp**: (98) 31981530
    - **Site**: www.ma.senac.br
    - **E-mail**: cepsaoluis@ma.senac.br
  `;

  /**
   * Normalizar os dados dos cursos para padronizar textos
   */
  private normalizeCourseList(rawList: any[]): any[] {
    // N√£o √© mais necess√°rio pois os dados j√° est√£o normalizados diretamente no c√≥digo
    return rawList;
  }

  /**
   * M√©todo obsoleto - dados agora incorporados diretamente
   */
  private loadSenacCourses(): void {
    // M√©todo mantido para compatibilidade, mas n√£o √© mais usado
    console.log('‚ö†Ô∏è [DEBUG] loadSenacCourses() chamado mas dados j√° est√£o incorporados');
  }

  /**
   * Normaliza o nome da √°rea para busca exata conforme o guia
   */
  private normalizeAreaInput(area: string): string {
    const map: Record<string, string> = {
      'tecnologia': 'tecnologia da informa√ß√£o',
      'tecnologia da informa√ß√£o': 'tecnologia da informa√ß√£o',
      'design': 'design',
      'gestao': 'gest√£o',
      'gest√£o': 'gest√£o',
      'saude': 'sa√∫de',
      'sa√∫de': 'sa√∫de',
      'beleza': 'beleza',
      'gastronomia': 'gastronomia',
      'moda': 'modas',
      'comunicacao': 'comunica√ß√£o',
      'comunica√ß√£o': 'comunica√ß√£o',
      'artes': 'artes'
    };
    const key = (area || '').trim().toLowerCase();
    return map[key] ?? key;
  }

  /**
   * Obt√©m cursos por eixo/√°rea com busca exata
   */
  private getCoursesByAreaExact(area: string): any[] {
    const normalized = this.normalizeAreaInput(area);
    const courses = this.senacCourses.filter(c => c.eixo === normalized);
    console.log(`üìö [DEBUG] Busca exata por √°rea "${area}" (normalizada: "${normalized}") encontrou ${courses.length} cursos`);
    return courses;
  }

  /**
   * Valida se um nome de curso existe na lista oficial
   */
  private isValidCourseName(name: string): boolean {
    return this.senacCourses.some(c =>
      c.Turma.trim().toLowerCase() === name.trim().toLowerCase()
    );
  }

  /**
   * Valida o markdown gerado para garantir que todos os cursos existem no JSON
   * Implementa√ß√£o conforme solucao-analysis-agent.md
   */
  private validateMarkdownCourses(md: string): string[] {
    const courseLines = md
      .split('\n')
      .map(l => l.trim())
      .filter(l => l.startsWith('- '))
      .map(l => l.replace(/\(.*\)/, '').replace('- ', '').trim().toLowerCase());

    const invalid: string[] = [];

    for (const name of courseLines) {
      const found = this.senacCourses.some(c => c.Turma.toLowerCase() === name);
      if (!found && !name.startsWith('nenhum curso')) {
        invalid.push(name);
      }
    }

    return invalid;
  }

  /**
   * Vers√£o 100% determin√≠stica - IA apenas para par√°grafo motivacional
   */
  async analyzeVocationalProfileDeterministic(request: VocationalTestRequest): Promise<string> {
    console.log(`üéØ [DEBUG] Iniciando an√°lise 100% determin√≠stica para ${request.nome}`);
    
    // Obter cursos da √°rea principal
    const cursosAreaPrincipal = this.getCoursesByAreaExact(request.area_interesse);
    console.log(`üìö [DEBUG] Cursos encontrados para √°rea "${request.area_interesse}":`, cursosAreaPrincipal.length);
    
    // Selecionar at√© 3 cursos principais e 3 opcionais
    const cursosPrincipais = cursosAreaPrincipal.slice(0, 3);
    const cursosOpcionais = this.senacCourses
      .filter(curso => !cursosAreaPrincipal.includes(curso))
      .slice(0, 3);
    
    console.log(`‚úÖ [DEBUG] Selecionados ${cursosPrincipais.length} principais e ${cursosOpcionais.length} opcionais`);
    
    // Usar IA APENAS para o par√°grafo motivacional (SEM mencionar cursos)
    const motivationalPrompt = `
      Escreva um par√°grafo motivacional personalizado para ${request.nome}, considerando:
      - √Årea de interesse: ${request.area_interesse}
      - Habilidades: ${request.habilidades.join(', ')}
      - Personalidade: ${request.personalidade}
      - Objetivos: ${request.objetivos}
      
      IMPORTANTE: 
      - N√ÉO mencione nomes de cursos espec√≠ficos
      - N√ÉO mencione "Curso de...", "Forma√ß√£o em...", etc.
      - Foque apenas nas caracter√≠sticas pessoais e potencial da pessoa
      - M√°ximo 2-3 frases inspiradoras
      - Seja motivacional mas gen√©rico sobre a √°rea
    `;
    
    const motivationalResponse = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [{ role: "user", content: motivationalPrompt }],
      temperature: 0.3,
      max_tokens: 150
    });
    
    const paragrafomotivacional = motivationalResponse.choices[0]?.message?.content || 
      `Seu perfil demonstra grande potencial na √°rea de ${request.area_interesse}. Com suas habilidades em ${request.habilidades.join(' e ')}, voc√™ tem tudo para se destacar profissionalmente.`;
    
    // Gerar markdown 100% determin√≠stico
    let md = `# An√°lise Vocacional de ${request.nome}\n\n`;
    md += `Ol√°, ${request.nome}! √â um prazer ajud√°-lo na sua jornada de descoberta profissional. `;
    md += `${paragrafomotivacional}\n\n`;
    
    md += `## Perfil Vocacional\n`;
    md += `- **Escolaridade**: ${request.escolaridade}\n`;
    md += `- **√Årea de Interesse Principal**: ${request.area_interesse}\n`;
    md += `- **Habilidades Destacadas**: ${request.habilidades.join(', ')}\n`;
    md += `- **Personalidade Profissional**: ${request.personalidade}\n`;
    md += `- **Experi√™ncia Pr√©via**: ${request.experiencia}\n`;
    md += `- **Objetivos Profissionais**: ${request.objetivos}\n`;
    md += `- **Disponibilidade para Estudos**: ${request.disponibilidade}\n\n`;
    
    // √Åreas de afinidade baseadas no perfil
    md += `## √Åreas de Afinidade\n`;
    md += `Com base nas suas respostas, suas principais √°reas de afinidade incluem:\n\n`;
    
    // Mapear √°rea de interesse para descri√ß√£o
    const areasDescricao: Record<string, string> = {
      'tecnologia': 'Tecnologia da Informa√ß√£o: Desenvolvimento de solu√ß√µes, an√°lise de dados, administra√ß√£o de sistemas.',
      'gest√£o': 'Gest√£o e Administra√ß√£o: Organiza√ß√£o, planejamento, coordena√ß√£o de equipes e processos.',
      'sa√∫de': 'Sa√∫de e Bem-estar: Cuidado com pessoas, procedimentos m√©dicos, atendimento humanizado.',
      'beleza': 'Beleza e Est√©tica: Cuidados pessoais, t√©cnicas de embelezamento, tend√™ncias est√©ticas.',
      'comunica√ß√£o': 'Comunica√ß√£o: Express√£o, apresenta√ß√£o, cria√ß√£o de conte√∫do, relacionamento interpessoal.',
      'design': 'Design e Cria√ß√£o: Projetos visuais, criatividade, ferramentas digitais de design.',
      'gastronomia': 'Gastronomia: Preparo de alimentos, t√©cnicas culin√°rias, inova√ß√£o gastron√¥mica.',
      'modas': 'Moda e Vestu√°rio: Cria√ß√£o, modelagem, tend√™ncias de moda, t√©cnicas de costura.',
      'artes': 'Artes Visuais: Express√£o art√≠stica, t√©cnicas fotogr√°ficas, cria√ß√£o visual.'
    };
    
    const areaKey = request.area_interesse.toLowerCase();
    const descricaoArea = areasDescricao[areaKey] || `${request.area_interesse}: √Årea de grande potencial para desenvolvimento profissional.`;
    md += `- ${descricaoArea}\n`;
    
    // Adicionar √°reas complementares baseadas na personalidade
    if (request.personalidade.toLowerCase().includes('comunicativ') || request.personalidade.toLowerCase().includes('colaborativ')) {
      md += `- Comunica√ß√£o e Relacionamento: Sua personalidade ${request.personalidade.toLowerCase()} √© ideal para trabalho em equipe.\n`;
    }
    if (request.habilidades.some(h => h.toLowerCase().includes('criativ') || h.toLowerCase().includes('inova'))) {
      md += `- Criatividade e Inova√ß√£o: Suas habilidades criativas abrem portas para solu√ß√µes inovadoras.\n`;
    }
    
    md += `\n## Recomenda√ß√µes de Cursos do Senac Maranh√£o\n\n`;
    
    if (cursosPrincipais.length > 0) {
      md += `### Cursos Principais (√Årea: ${request.area_interesse})\n`;
      cursosPrincipais.forEach((curso, index) => {
        md += `**${index + 1}. ${curso.Turma}** (${curso['C. H.']}h)\n`;
        md += `- √Årea: ${curso.eixo}\n`;
        md += `- Ideal para desenvolver compet√™ncias espec√≠ficas na sua √°rea de interesse principal.\n\n`;
      });
    } else {
      md += `### Cursos Recomendados\n`;
      md += `N√£o encontramos cursos espec√≠ficos para "${request.area_interesse}", mas temos excelentes op√ß√µes em √°reas relacionadas:\n\n`;
    }
    
    if (cursosOpcionais.length > 0) {
      md += `### Cursos Complementares\n`;
      cursosOpcionais.forEach((curso, index) => {
        md += `**${index + 1}. ${curso.Turma}** (${curso['C. H.']}h)\n`;
        md += `- √Årea: ${curso.eixo}\n`;
        md += `- Complementa sua forma√ß√£o com habilidades valiosas no mercado de trabalho.\n\n`;
      });
    }
    
    md += `## Pr√≥ximos Passos\n`;
    md += `1. **Escolha**: Selecione um ou mais cursos que despertam seu interesse\n`;
    md += `2. **Contato**: Entre em contato com o Senac Maranh√£o para informa√ß√µes sobre inscri√ß√µes\n`;
    md += `3. **Networking**: Participe de eventos e workshops na sua √°rea de interesse\n`;
    md += `4. **Pr√°tica**: Busque oportunidades de aplicar seus conhecimentos em projetos reais\n\n`;
    
    md += `## Contato Senac Maranh√£o\n`;
    md += `Para mais informa√ß√µes sobre os cursos e processo de inscri√ß√£o:\n\n`;
    md += `- **Telefone**: (98) 31981530\n`;
    md += `- **WhatsApp**: (98) 31981530\n`;
    md += `- **Site**: www.ma.senac.br\n`;
    md += `- **E-mail**: cepsaoluis@ma.senac.br\n\n`;
    
    md += `${request.nome}, acredite no seu potencial! O Senac Maranh√£o est√° aqui para apoiar sua jornada profissional. Boa sorte!`;

    // Valida√ß√£o final - garantir que n√£o h√° cursos inventados
    const invalidCourses = this.validateMarkdownCourses(md);
    if (invalidCourses.length > 0) {
      console.error('üö® [DEBUG] Cursos inv√°lidos encontrados:', invalidCourses);
      throw new Error('A gera√ß√£o tentou incluir cursos que n√£o existem no cadastro oficial.');
    }

    console.log(`‚úÖ [DEBUG] An√°lise 100% determin√≠stica conclu√≠da com sucesso para ${request.nome}`);
    console.log(`üìä [DEBUG] Cursos inclu√≠dos: ${cursosPrincipais.length + cursosOpcionais.length} total`);
    return md;
  }



  /**
   * Constr√≥i contexto dos cursos dispon√≠veis com valida√ß√£o rigorosa
   */
  private buildCoursesContext(): string {
    if (this.senacCourses.length === 0) {
      return "‚ö†Ô∏è ERRO: Nenhum curso carregado do arquivo senac-courses.json";
    }

    const cursosPorEixo = this.senacCourses.reduce((acc, curso) => {
      const eixo = curso.eixo || 'Outros';
      if (!acc[eixo]) {
        acc[eixo] = [];
      }
      acc[eixo].push(curso);
      return acc;
    }, {} as Record<string, any[]>);

    let context = `
    üö® ATEN√á√ÉO CR√çTICA: LISTA OFICIAL DE CURSOS SENAC MARANH√ÉO üö®
    
    ‚ùå PROIBIDO INVENTAR QUALQUER CURSO QUE N√ÉO ESTEJA NESTA LISTA!
    ‚ùå PROIBIDO USAR NOMES GEN√âRICOS COMO "Curso de...", "T√©cnico em...", "Forma√ß√£o em..."!
    ‚ùå PROIBIDO MENCIONAR CARREIRAS OU PROFISS√ïES - APENAS CURSOS DA LISTA!
    
    ‚úÖ USE APENAS OS CURSOS ABAIXO COM NOMES EXATOS:
    
    TOTAL DE CURSOS DISPON√çVEIS: ${this.senacCourses.length}
    
    `;
    
    Object.entries(cursosPorEixo).forEach(([eixo, cursos]) => {
      context += `\nüìö EIXO: ${eixo.toUpperCase()}\n`;
      (cursos as any[]).forEach((curso: any) => {
        context += `   ‚úì ${curso.Turma} (${curso['C. H.']}h)\n`;
      });
    });

    context += `
    
    üîç CHECKLIST DE VALIDA√á√ÉO OBRIGAT√ìRIO:
    1. ‚úÖ Todos os cursos mencionados est√£o na lista acima?
    2. ‚úÖ Os nomes est√£o EXATAMENTE como na coluna "Turma"?
    3. ‚úÖ As cargas hor√°rias est√£o corretas conforme "C. H."?
    4. ‚úÖ N√£o inventei nenhum curso novo?
    5. ‚úÖ N√£o usei nomes gen√©ricos ou carreiras?
    
    üö® SE ALGUMA RESPOSTA FOR "N√ÉO", REESCREVA COMPLETAMENTE!
    
    `;

    return context;
  }

  private buildAnalysisPrompt(request: VocationalTestRequest): string {
    const cursosAreaPrincipal = this.getCoursesByAreaExact(request.area_interesse);
    const todosOsCursos = this.senacCourses;
    
    return `
      üéØ AN√ÅLISE VOCACIONAL PERSONALIZADA PARA: ${request.nome}
      
      DADOS PESSOAIS:
      - Nome: ${request.nome}
      - Escolaridade: ${request.escolaridade}
      - √Årea de interesse: ${request.area_interesse}
      - Disponibilidade: ${request.disponibilidade}
      
      PERFIL PROFISSIONAL:
      - Habilidades: ${request.habilidades.join(', ')}
      - Personalidade: ${request.personalidade}
      - Experi√™ncia: ${request.experiencia}
      - Objetivos: ${request.objetivos}
      
      RESPOSTAS DO TESTE:
      ${JSON.stringify(request.respostas_teste)}
      
      üìö CURSOS PRIORIT√ÅRIOS DA √ÅREA DE INTERESSE (${request.area_interesse}):
      ${cursosAreaPrincipal.map((curso: any) => `- ${curso.Turma} (${curso['C. H.']}h) - Eixo: ${curso.eixo}`).join('\n')}
      
      üìã LISTA COMPLETA DE CURSOS DISPON√çVEIS NO SENAC MARANH√ÉO (OFICIAL):
      ${todosOsCursos.map((curso: any) => `- ${curso.Turma} (${curso['C. H.']}h) - Eixo: ${curso.eixo}`).join('\n')}
      
      üö® INSTRU√á√ïES CR√çTICAS - LEIA ATENTAMENTE ANTES DE RESPONDER:
      
      ‚ùå PROIBIDO ABSOLUTAMENTE:
      1. Inventar, criar ou mencionar qualquer curso que N√ÉO esteja na lista oficial acima
      2. Usar nomes gen√©ricos como "Curso de...", "Forma√ß√£o em...", "Especializa√ß√£o em...", "Desenvolvimento de Sistemas", "Programa√ß√£o para Internet", "T√©cnico em Manuten√ß√£o de Computadores", "Seguran√ßa da Informa√ß√£o", "Gest√£o de Projetos"
      3. Modificar os nomes dos cursos da lista oficial
      4. Mencionar cursos de outras institui√ß√µes
      5. Ignorar o formato de resposta obrigat√≥rio
      6. Omitir as informa√ß√µes de contato do Senac Maranh√£o
      7. Criar se√ß√µes de "carreiras" ou "profiss√µes" - APENAS recomendar CURSOS da lista oficial
      
      ‚úÖ OBRIGAT√ìRIO FAZER:
      1. Use EXCLUSIVAMENTE os cursos listados na "LISTA COMPLETA DE CURSOS DISPON√çVEIS"
      2. PRIORIZE os cursos da √°rea de interesse principal (${request.area_interesse})
      3. Use EXATAMENTE o nome como aparece no campo "Turma": "${cursosAreaPrincipal.map((c: any) => c.Turma).join('", "')}"
      4. Inclua SEMPRE a carga hor√°ria entre par√™nteses: (XXXh)
      5. Siga RIGOROSAMENTE o formato de resposta do system prompt
      6. Personalize completamente com o nome ${request.nome}
      7. Se n√£o houver cursos suficientes na √°rea principal, sugira cursos de √°reas relacionadas da lista oficial
      8. Seja motivacional mas baseado APENAS nos cursos reais dispon√≠veis
      9. NUNCA mencione carreiras ou profiss√µes - APENAS os cursos dispon√≠veis na lista oficial
      
      üéØ PARA √ÅREA "TECNOLOGIA" - USE APENAS ESTES 7 CURSOS REAIS:
      - Administrador de Banco de Dados (200h)
      - Assistente de Tecnologias da Informa√ß√£o (200h)
      - Business Intelligence com Power bi (40h)
      - Excel Avan√ßado (60h)
      - Forma√ß√£o - Programa√ß√£o em Python (156h)
      - Introdu√ß√£o √† Inform√°tica Windows e Office (80h)
      - Produtividade com Chatgpt (20h)
      
      üîç VERIFICA√á√ÉO FINAL OBRIGAT√ìRIA:
      Antes de finalizar sua resposta, verifique se:
      - TODOS os cursos mencionados est√£o na lista oficial acima
      - Os nomes est√£o EXATAMENTE como na coluna "Turma"
      - As cargas hor√°rias est√£o corretas conforme "C. H."
      - O formato de resposta est√° sendo seguido rigorosamente
      - As informa√ß√µes de contato do Senac MA est√£o inclu√≠das
      
      AGORA GERE A AN√ÅLISE VOCACIONAL SEGUINDO TODAS AS INSTRU√á√ïES ACIMA.
    `;
  }



  private loadGuidelines(): string {
    try {
      const guidelinesPath = path.join(process.cwd(), 'knowledge', 'diretrizes.md');
      return fs.readFileSync(guidelinesPath, "utf-8");
    } catch (error) {
      console.warn("‚ö†Ô∏è [AnalysisAgent] Arquivo de diretrizes n√£o encontrado");
      return "";
    }
  }
}

export const analysisAgent = new AnalysisAgent();